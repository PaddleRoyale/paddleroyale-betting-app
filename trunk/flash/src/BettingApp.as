package{	import com.bettingapp.controller.events.BettingAppEvent;	import com.bettingapp.model.managers.EventManager;	import com.bettingapp.model.managers.ScreenManager;	import com.bettingapp.model.managers.WebServicesManager;	import com.bettingapp.view.screens.*;	import com.bettingapp.vo.ScreenIds;		import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;			public class BettingApp extends Sprite	{		private var _screenManager:ScreenManager;		private var _eventManager:EventManager;		private var _webServicesManager:WebServicesManager;				public function BettingApp()		{			super();						// make sure event manager gets initialized first so other managers can utilize...			_eventManager = EventManager.instance;			_screenManager = ScreenManager.instance;			_webServicesManager = WebServicesManager.instance;						_screenManager.init(this);						initScreens();						var event:BettingAppEvent = new BettingAppEvent( BettingAppEvent.CHANGE_VIEW);			event.parameters.targetScreenId = (CONFIG::ADMIN_MODE == true) ? ScreenIds.SCREEN_ID_ADMIN_MENU : ScreenIds.SCREEN_ID_VERIFY_VOUCHER;			_eventManager.dispatchEvent(event);						addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			addEventListener(Event.RESIZE, onResize);		}				private function onResize($e:Event):void		{			// not really gonna be applicable unless we put on different devices other than Ipad.		}				private function onAddedToStage($e:Event):void		{			// support autoOrients			//stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.EXACT_FIT;					removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			trace("scaleMode=" + stage.scaleMode);		}				private function initScreens():void		{			var screen:BaseScreen;						screen = new AttractScreen();			_screenManager.addScreen(ScreenIds.SCREEN_ID_ATTRACT, screen);						screen = new VerifyVoucherScreen();			_screenManager.addScreen(ScreenIds.SCREEN_ID_VERIFY_VOUCHER, screen);						screen = new ChooseBetTypeScreen();			_screenManager.addScreen(ScreenIds.SCREEN_ID_CHOOSE_BET_TYPE, screen);						screen = new SelectAgencyScreen();			_screenManager.addScreen(ScreenIds.SCREEN_ID_SELECT_AGENCY, screen);						screen = new SelectPlayerScreen();			_screenManager.addScreen(ScreenIds.SCREEN_ID_SELECT_PLAYER, screen);						screen = new BetConfirmationScreen();			_screenManager.addScreen(ScreenIds.SCREEN_ID_BET_CONFIRMATION, screen);						// don't need to add if we're not in admin			if (CONFIG::ADMIN_MODE == true)			{				screen = new AdminMenuScreen();				_screenManager.addScreen(ScreenIds.SCREEN_ID_ADMIN_MENU, screen);								screen = new ShowWinningBetTotalsScreen();				_screenManager.addScreen(ScreenIds.SCREEN_ID_ADMIN_SHOW_BET_TOTALS, screen);			}						trace("screens initialized");		}	}}