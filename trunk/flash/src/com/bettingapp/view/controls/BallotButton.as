package com.bettingapp.view.controls{	import com.bettingapp.controller.events.BettingAppEvent;	import com.bettingapp.model.managers.EventManager;		import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.text.TextField;	public class BallotButton extends MovieClip	{		private var _label:TextField;		private var _id:int;				public function BallotButton($label:String, $id:int)		{			super();						_label = txt_label;			_label.text = $label;						// center the label vertically based on what was set.			_label.y = (height * 0.5) - (_label.textHeight * 0.5);									_id = $id;						buttonMode = true;			mouseChildren = false;						addEventListener(MouseEvent.MOUSE_DOWN, onMouseDown);			addEventListener(MouseEvent.MOUSE_OUT, onMouseOut);			addEventListener(MouseEvent.MOUSE_UP, onMouseUp);		}				public function release():void		{			removeEventListener(MouseEvent.MOUSE_DOWN, onMouseDown);			removeEventListener(MouseEvent.MOUSE_OUT, onMouseOut);			removeEventListener(MouseEvent.MOUSE_UP, onMouseUp);		}				private function onMouseDown($e:MouseEvent):void		{			gotoAndStop("down");		}				private function onMouseOut($e:MouseEvent):void		{			if (currentLabel == "down")			{				gotoAndStop("up");			}		}				private function onMouseUp($e:MouseEvent):void		{			gotoAndStop("up");			var event:BettingAppEvent = new BettingAppEvent(BettingAppEvent.BUTTON_PRESSED);			event.parameters.button = this;			EventManager.instance.dispatchEvent(event);		}				public function get label():String		{			return _label.text;		}				public function get id():int		{			return _id;		}	}}